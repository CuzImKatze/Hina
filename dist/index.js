"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const logg = require("logg.js");
const dotenv = require("dotenv");
dotenv.config();
let config = "./config.json";
const HinaClient = require("./hina/HinaClient");
const cmdDir = fs.readdirSync("./commands/");
let client = new HinaClient({ DisableMentions: true });
for (let dir of cmdDir) {
    client.groups.push(dir);
    logg.info("Start Loading CommandCategorys!", "HinaClient");
    logg.info("Loading command category " + dir + ".", "HinaClient");
    logg.info("Finished Loading Command categorys!", "HinaClient");
    let group = fs.readdirSync(`./commands/${dir}`);
    for (let commandFile of group) {
        logg.info("Start Loading Commands!", "HinaClient");
        logg.info("Loading command " + dir + "/" + commandFile.split(".")[0] + ".", "HinaClient");
        logg.info("Finished Command Loading!", "HinaClient");
        if (!commandFile.endsWith(".js")) {
            logg.info("No Commands!", "HinaClient");
        }
        let cmd = require(`./commands/${dir}/${commandFile}`);
        client.commands.set(commandFile.split(".")[0], cmd);
    }
}
fs.readdir("./events", (error, files) => {
    if (error) {
        logg.error(error, "EventHandler");
    }
    files.forEach((file) => {
        if (!file.endsWith(".js")) {
            return;
        }
        logg.info('Start Loading Events', 'HinaClient');
        logg.info('Loading Event ' + file.split(".")[0] + ".", "HinaClient");
        logg.info('Finished Loading Events!', 'HinaClient');
        const event = require(`./events/${file}`);
        let eventName = file.split(".")[0];
        client.on(eventName, event.bind(null, client));
    });
});
client.login(process.env.TOKEN);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSx5QkFBeUI7QUFDekIsZ0NBQWdDO0FBQ2hDLGlDQUFpQztBQUNqQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUE7QUFDZixJQUFJLE1BQU0sR0FBRyxlQUFlLENBQUE7QUFDNUIsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUE7QUFDL0MsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUd6QyxJQUFJLE1BQU0sR0FBRyxJQUFJLFVBQVUsQ0FBQyxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBRXZELEtBQUssSUFBSSxHQUFHLElBQUksTUFBTSxFQUFFO0lBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsaUNBQWlDLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDM0QsSUFBSSxDQUFDLElBQUksQ0FBQywyQkFBMkIsR0FBRyxHQUFHLEdBQUcsR0FBRyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ2pFLElBQUksQ0FBQyxJQUFJLENBQUMscUNBQXFDLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDL0QsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDaEQsS0FBSyxJQUFJLFdBQVcsSUFBSSxLQUFLLEVBQUU7UUFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQyx5QkFBeUIsRUFBRSxZQUFZLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsV0FBVyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDMUYsSUFBSSxDQUFDLElBQUksQ0FBQywyQkFBMkIsRUFBRSxZQUFZLENBQUMsQ0FBQztRQUNyRCxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUM5QixJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxZQUFZLENBQUMsQ0FBQztTQUN6QztRQUNELElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxjQUFjLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQyxDQUFDO1FBRXZELE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7S0FDeEQ7Q0FDSjtBQUVELEVBQUUsQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxFQUFFO0lBQ3BDLElBQUksS0FBSyxFQUFFO1FBQ1AsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsY0FBYyxDQUFDLENBQUM7S0FDckM7SUFDRCxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDbkIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDdkIsT0FBTTtTQUNUO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxzQkFBc0IsRUFBRSxZQUFZLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ3JFLElBQUksQ0FBQyxJQUFJLENBQUMsMEJBQTBCLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDcEQsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLFlBQVksSUFBSSxFQUFFLENBQUMsQ0FBQztRQUMxQyxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ25DLE1BQU0sQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDbkQsQ0FBQyxDQUFDLENBQUE7QUFDTixDQUFDLENBQUMsQ0FBQTtBQUNGLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyJ9